{
 "properties": {
  "displayName": "flowlog",
  "policyType": "Custom",
  "mode": "Indexed",
  "metadata": {
   "version": "1.0.1",
   "createdBy": "6ed8e765-b0b2-4e3f-831d-8ff1116cee3c",
   "createdOn": "2022-09-28T03:35:32.914483Z",
   "updatedBy": "6ed8e765-b0b2-4e3f-831d-8ff1116cee3c",
   "updatedOn": "2022-09-28T05:20:20.8418159Z"
  },
  "parameters": {
   "nsgRegion": {
    "type": "String",
    "metadata": {
     "displayName": "NSG Region",
     "description": "This Policy will review NSGs only in the selected region. You can create other assignments to include other regions.",
     "strongType": "location"
    }
   },
   "storageId": {
    "type": "String",
    "metadata": {
     "displayName": "Storage id",
     "description": "A string with the storage id for the flowlogs to be sent to. It will be used for deployment purposes only. Make sure this storage account is located in the same region as the NSG. The format must be: '/subscriptions/{subscription id}/resourceGroups/{resourceGroup name}/providers/Microsoft.Storage/storageAccounts/{storage account name}",
     "assignPermissions": true
    }
   },
   "networkWatcherRG": {
    "type": "String",
    "metadata": {
     "displayName": "Network Watchers RG",
     "description": "The name of the resource group where the flowLog resources will be created. This will be used only if a deployment is required. This is the resource group where the Network Watchers are located.",
     "strongType": "existingResourceGroups"
    }
   },
   "networkWatcherName": {
    "type": "String",
    "metadata": {
     "displayName": "Network Watcher name",
     "description": "The name of the network watcher under which the flowLog resources will be created. Make sure it belongs to the same region as the NSG."
    }
   }
  },
  "policyRule": {
   "if": {
    "allOf": [
     {
      "field": "type",
      "equals": "Microsoft.Network/networkSecurityGroups"
     },
     {
      "field": "location",
      "equals": "[parameters('nsgRegion')]"
     }
    ]
   },
   "then": {
    "effect": "deployIfNotExists",
    "details": {
     "type": "Microsoft.Network/networkWatchers/flowlogs",
     "resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherRG'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
     "name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
     "existenceCondition": {
      "allOf": [
       {
        "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
        "equals": "true"
       },
       {
        "field": "Microsoft.Network/networkWatchers/flowLogs/storageId",
        "equals": "[parameters('storageId')]"
       },
       {
        "field": "Microsoft.Network/networkWatchers/flowLogs/retentionPolicy.enabled",
        "equals": "true"
       },
       {
        "field": "Microsoft.Network/networkWatchers/flowLogs/retentionPolicy.days",
        "equals": 7
       }
      ]
     },
     "roleDefinitionIds": [
      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
     ],
     "deployment": {
      "properties": {
       "mode": "incremental",
       "template": {
        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
         "storageId": {
          "type": "String"
         },
         "networkWatcherRG": {
          "type": "String"
         },
         "networkWatcherName": {
          "type": "String"
         },
         "flowlogName": {
          "type": "String"
         },
         "location": {
          "type": "String"
         },
         "targetResource": {
          "type": "string"
         }
        },
        "resources": [
         {
          "type": "Microsoft.Resources/deployments",
          "name": "[concat('flowlogDeployment-', uniqueString(parameters('flowlogName')))]",
          "apiVersion": "2019-10-01",
          "resourceGroup": "[parameters('networkWatcherRG')]",
          "properties": {
           "mode": "incremental",
           "parameters": {},
           "template": {
            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "resources": [
             {
              "type": "Microsoft.Network/networkWatchers/flowLogs",
              "name": "[concat(parameters('networkWatcherName'), '/', parameters('flowlogName'))]",
              "apiVersion": "2019-11-01",
              "location": "[parameters('location')]",
              "properties": {
               "targetResourceId": "[parameters('targetResource')]",
               "storageId": "[parameters('storageId')]",
               "enabled": "true",
               "retentionPolicy": {
                "days": "7",
                "enabled": "true"
               }
              }
             }
            ]
           }
          }
         }
        ]
       },
       "parameters": {
        "storageId": {
         "value": "[parameters('storageId')]"
        },
        "networkWatcherRG": {
         "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherRG'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]"
        },
        "networkWatcherName": {
         "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherName'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8])]"
        },
        "flowlogName": {
         "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), concat(field('name'), '-', resourceGroup().name, '-', 'flowlog'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10])]"
        },
        "location": {
         "value": "[field('location')]"
        },
        "targetResource": {
         "value": "[concat(resourceGroup().id, '/providers/Microsoft.Network/networkSecurityGroups/', field('name'))]"
        }
       }
      }
     }
    }
   }
  }
 },
 "id": "/subscriptions/1ccb1bf8-f93f-42dc-886b-acdbc6f972eb/providers/Microsoft.Authorization/policyDefinitions/785144af-b539-4c9e-af5b-4d18789d22d6",
 "type": "Microsoft.Authorization/policyDefinitions",
 "name": "785144af-b539-4c9e-af5b-4d18789d22d6"
}